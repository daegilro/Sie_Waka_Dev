#include <SPI.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
#define down_pin 2
#define up_pin 4
#define enter_pin 16
#define back_pin 17
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

static const uint8_t image_data_Saraarray[1024] = {
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x87, 0xff, 0xff, 0xf0, 0x3e, 0x7f, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xc0, 0x0c, 0x3f, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfe, 0x09, 0xff, 0xff, 0x80, 0x06, 0x7f, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xfc, 0x0c, 0xff, 0xff, 0x8f, 0x87, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xf8, 0x0e, 0xff, 0xff, 0x0f, 0xef, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xf8, 0x0f, 0x7f, 0xff, 0x1f, 0xfe, 0x78, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xf0, 0x0f, 0x3f, 0xff, 0x8f, 0xfc, 0x70, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xe0, 0x0f, 0x9f, 0xff, 0x81, 0xfc, 0x71, 0xe1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xc0, 0x0e, 0x0f, 0xff, 0xc0, 0x3c, 0x63, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xc6, 0x08, 0x4f, 0xff, 0xe0, 0x0c, 0x63, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0x8e, 0x01, 0xe7, 0xff, 0xfe, 0x04, 0x60, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0x0c, 0x07, 0xf7, 0xff, 0xff, 0x84, 0x60, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0x08, 0x0f, 0xf3, 0xff, 0xff, 0xc4, 0x63, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfe, 0x38, 0x0f, 0xfb, 0xff, 0xbf, 0xc4, 0x63, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfe, 0x30, 0x0f, 0xf9, 0xff, 0x0f, 0x84, 0x61, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0x70, 0x0f, 0xf9, 0xff, 0x00, 0x0c, 0x70, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0x60, 0x0f, 0xe0, 0xff, 0x80, 0x1c, 0x78, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0x60, 0x0f, 0x80, 0xff, 0xe0, 0x3e, 0x7e, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xfc, 0xe0, 0x0c, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf9, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf9, 0xc0, 0x00, 0x00, 0x7f, 0x9f, 0xff, 0xf1, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x80, 0x00, 0x00, 0x7f, 0x0f, 0xff, 0xf1, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0x0f, 0xff, 0xe1, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0x8f, 0xff, 0xe3, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x00, 0x7f, 0x8f, 0xc7, 0xe3, 0xe0, 0xce, 0x3e, 0x7c, 0x19, 0xff, 0xff, 
    0xff, 0xf8, 0x00, 0x00, 0x00, 0xff, 0x87, 0xc3, 0xc3, 0x80, 0x0e, 0x3c, 0x78, 0x00, 0xff, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 0xc7, 0x83, 0xc7, 0x00, 0x0e, 0x38, 0x70, 0x00, 0xff, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x00, 0xff, 0xc7, 0x83, 0xc7, 0x1f, 0x0e, 0x30, 0xe1, 0xe0, 0xff, 0xff, 
    0xff, 0xfc, 0x00, 0x00, 0x01, 0xff, 0xc3, 0x81, 0x86, 0x1f, 0x8e, 0x21, 0xe3, 0xf0, 0xff, 0xff, 
    0xff, 0xfe, 0x00, 0x00, 0x01, 0xff, 0xe3, 0x11, 0x8e, 0x3f, 0x8e, 0x03, 0xe3, 0xf8, 0xff, 0xff, 
    0xff, 0xff, 0x00, 0x00, 0x03, 0xff, 0xe3, 0x18, 0x8e, 0x3f, 0x8e, 0x07, 0xe3, 0xf8, 0xff, 0xff, 
    0xff, 0xff, 0x00, 0x00, 0x03, 0xff, 0xe0, 0x38, 0x0e, 0x3f, 0x8e, 0x03, 0xe3, 0xf8, 0xff, 0xff, 
    0xff, 0xff, 0x80, 0x00, 0x07, 0xff, 0xf0, 0x38, 0x1e, 0x3f, 0x8e, 0x01, 0xe3, 0xf8, 0xff, 0xff, 
    0xff, 0xff, 0xc0, 0x00, 0x0f, 0xff, 0xf0, 0x7c, 0x1e, 0x1f, 0x8e, 0x30, 0xe3, 0xf0, 0xff, 0xff, 
    0xff, 0xff, 0xe0, 0x00, 0x1f, 0xff, 0xf8, 0x7c, 0x1f, 0x0e, 0x0e, 0x38, 0x71, 0xe0, 0xff, 0xff, 
    0xff, 0xff, 0xf0, 0x00, 0x7f, 0xff, 0xf8, 0x7e, 0x3f, 0x80, 0x0e, 0x3c, 0x30, 0x00, 0xff, 0xff, 
    0xff, 0xff, 0xfc, 0x00, 0xff, 0xff, 0xf8, 0xfe, 0x3f, 0xc0, 0x0e, 0x7e, 0x38, 0x08, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xcf, 0xff, 0xff, 0xfd, 0xff, 0x7f, 0xe1, 0xdf, 0xff, 0xfe, 0x1d, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};


int selected = 0;
int entered = -1;


void displaymenu(void) {

  int down = analogRead(down_pin);
  int up = analogRead(up_pin);
  int enter = digitalRead(enter_pin);
  int back = digitalRead(back_pin);
  Serial.print(down);
  Serial.print('\t');
  Serial.print(up);
  Serial.print('\t');
  Serial.print(enter);
  Serial.print('\t');
  Serial.println(back);

  if (up == 0 && down == 0) {
  };
  if (up == 0) {
    selected = selected + 1;
    delay(200);
  };
  if (down == 0) {
    selected = selected - 1;
    delay(200);
  };
  if (enter == 0) {
    entered = selected;
  };
  if (back == 0) {
    entered = -1;
  };
  const char *options[4] = {
    " Medicion OFF LINE ",
    " Medicion ON LINE ",
    " Calibrar ",
    " Info Device ",
  };

  if (entered == -1) {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.println(F("Menu Principal"));
    display.println("");
    for (int i = 0; i < 4; i++) {
      if (i == selected) {
        display.setTextColor(SSD1306_BLACK, SSD1306_WHITE);
        display.println(options[i]);
      } else if (i != selected) {
        display.setTextColor(SSD1306_WHITE);
        display.println(options[i]);
      }
    }
  } else if (entered == 0) {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.println(F("MODULO SIE WAKA"));
    display.println("Modo OFF LINE");
    display.setTextColor(SSD1306_WHITE);
    display.setTextSize(2);
    display.println("Dsn Menu system");// demas info
  } else if (entered == 1) {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.println(F("MODULO SIE WAKA"));
    display.println("Modo ON LINE");
    display.setTextColor(SSD1306_WHITE);
    display.setTextSize(2);
    display.println("Dsn Menu system :)"); // Info que se quiere mostrar en esta zona
  }
  else if (entered == 2) {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.println(F("MODULO SIE WAKA"));
    display.println("Calibracion");
    display.setTextColor(SSD1306_WHITE);
    display.setTextSize(2);
    display.println("Dsn Menu system:)");
  } else if (entered == 3) {
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(SSD1306_WHITE);
    display.setCursor(0, 0);
    display.println(F("MODULO SIE WAKA"));
    display.println("Info. del Sistema");
    display.setTextColor(SSD1306_WHITE);
    display.setTextSize(2);
    display.println("Dsn Menu system:)");
  }

  display.display();
}
 
void setup() {
  Serial.begin(115200);
  
  pinMode(down_pin, INPUT);
  pinMode(up_pin, INPUT);
  pinMode(enter_pin, INPUT);
  pinMode(back_pin, INPUT);
 
  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }
  delay(2000); // Pause for 2 seconds
 
  // Clear the buffer.
  display.clearDisplay();
  
  // Draw bitmap on the screen
  display.drawBitmap(0, 0, image_data_Saraarray, 128, 64, 1);
  display.display();
  delay(2000);
}
 
void loop() {
  displaymenu();  
}